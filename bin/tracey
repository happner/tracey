var commander = require('commander')
, chalk = require('chalk')
, fs = require('fs-extra')
, path = require('path')
, Runner = require('../lib/test/runner')
;

var LOGTYPE = {
   INFO:0,
   WARN:1,
   FAIL:2,
   SUCCESS:3
}

var log = function(message, type, data){

    if (data == null) data = '';

    switch(type) {

        case LOGTYPE.WARN:
            console.log(chalk.yellow(message), data);
            break;
        case LOGTYPE.FAIL:
            console.log(chalk.red(message), data);
            break;
        case LOGTYPE.SUCCESS:
            console.log(chalk.green(message), data);
            break;
        default: console.log(chalk.blue(message), data);

    }
}

commander

  .version(JSON.parse(require('fs').readFileSync(__dirname + '/../package.json')).version)
  .command('run <repo>', 'as documented in .tracey.yml')
  .option("-p, --path <val>", "location of the tracey config")
  .option("-c, --commit <val>", "the actual commit for the repo")
  .action(function(cmd, option){

    if (cmd == 'run'){

       var repo = option;
       var config = commander.option('p').path;
       var commit = commander.option('c').commit;

       var runner = new Runner(repo, config, commit);

       runner.on('info', function(message){
          log(message, LOGTYPE.INFO)
       });

       runner.on('fail', function(message){
          log(message, LOGTYPE.FAIL)
       });

       runner.on('warn', function(message){
          log(message, LOGTYPE.WARN)
       });

       runner.on('complete', function(message){
          log(message, LOGTYPE.SUCCESS)
       });

       runner.start()
    }

  })
  .parse(process.argv);




